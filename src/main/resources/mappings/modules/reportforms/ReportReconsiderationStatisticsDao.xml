<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.reportforms.dao.ReportReconsiderationStatisticsDao">

	<!-- 查询某批次 初始登记 的人员信息 -->
	<select id="findReconsiderationStatisticsFirstInfo" resultType="ReportReconsiderationStatistics">
        SELECT
        enterprise_workers.`name` as enterpriseName,
        case  enterprise_workers.sex  when '1' then '男' when '2' then '女' end as sex,
        a.`name` as companyName,
        sys_office.`name` AS areaName,
        sys_office.id AS officeId,
        case person_record.declare_type
        when '0' then '注销登记' when '1' then '初始登记' when '2' then '变更执业单位' when '3' then '变更专业' when '4' then '继续登记' end as declareType,
        Getzhuanye(h.newvalue) as registerMainSpecialty,
        Getzhuanye(i.newvalue) as registerAuxiliarySpecialty,
        person_record.declare_date as declareDate,
        b.`name` as finalZhuName,
        case person_record.first_Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as fzResult,
        c.name as finalFuName,
        case person_record.second_Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as szResult,
        #case person_record.Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end,
        GROUP_concat(concat(g.label,':',f.label,'-描述:',person_expert.item_text)  SEPARATOR '|') as finalOpinion,
        GROUP_concat(REPLACE(back_memo,'	','')  SEPARATOR '|') as feedBack,
        d.name as fexpertName,
        case person_record.Fdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end finalResult,
        person_record.fy_advice as advice
        #person_expert.type,
        #g.label,
        #person_expert.items,
        #f.label,
        #person_expert.item_text
        #g.label,
        #person_expert.type,
        #f.value,
        #f.label
        #feedback.back_memo,
        #person_record.batch_status,
        #person_record.declare_status
        FROM
        person_record
        left join enterprise_workers on person_record.person_id=enterprise_workers.id
        left join sys_user a on enterprise_workers.pid=a.id
        left join sys_office on a.office_id=sys_office.id
        left join sys_user b on person_record.first_Zexpert_id =b.id
        left join sys_user c on person_record.second_Zexpert_id =c.id
        left join sys_user d on person_record.Fexpert_id=d.id
        left join change_item h on person_record.id=h.person_record_id and h.changetype='4'
        left join change_item i on person_record.id=i.person_record_id and i.changetype='5'
        left join person_expert on person_record.id=person_expert.record_id and person_expert.items!='1'
        left join sys_examine on person_expert.examine_id=sys_examine.id
        left join sys_dict g on person_expert.type = g.value and g.type='expert_type'
        left join sys_dict f on concat('person_expert',person_expert.type)=f.type and person_expert.items=f.value
        left join feedback on feedback.person_record_id=person_record.id
        <where>
            <if test="officeId != null and officeId !=''">
                and sys_office.id = #{officeId}
            </if>
            <if test="batchNo != null and batchNo !=''">
                and batchno = #{batchNo}
            </if>
            <if test="finalResult != null and finalResult !=''">
                and Fdeclare_result = #{finalResult}
            </if>
            <if test="declareType != null and declareType !=''">
                and person_record.declare_type = #{declareType}
            </if>
            and person_record.del_flag='0'
            and person_record.batch_status >11
            and person_record.batch_status !='21'
        </where>
        group by
        enterprise_workers.sex,
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name`,
        #enterprise_workers.register_certificate_num,
        person_record.declare_date,
        h.newvalue,
        i.newvalue,
        d.`name`,
        person_record.first_Zdeclare_result,
        b.`name`,
        person_record.second_Zdeclare_result,
        #person_record.Zdeclare_result,
        c.name,
        person_record.Fdeclare_result,
        #feedback.back_memo,
        person_record.fy_advice
        order by
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name` asc
    </select>



    <!-- 查询某批次 继续登记 的人员信息 -->
    <select id="findReconsiderationStatisticsContinueInfo" resultType="ReportReconsiderationStatistics">
        select
        enterprise_workers.`name` as enterpriseName,
        case  enterprise_workers.sex  when '1' then '男' when '2' then '女' end as sex,
        enterprise_workers.register_certificate_num as registerCertificateNum,
        a.`name` as companyName,
        sys_office.`name` as areaName,
        case person_record.declare_type
        when '0' then '注销登记' when '1' then '初始登记' when '2' then '变更执业单位' when '3' then '变更专业' when '4' then '继续登记' end as declareType,
        person_record.declare_date as declareDate,
        b.`name` as finalZhuName,
        case person_record.Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as fzResult,
        GROUP_concat(concat(g.label,':',f.label,'-描述:',person_expert.item_text)  SEPARATOR '|') as finalOpinion,
        GROUP_concat(back_memo  SEPARATOR '|') as feedBack,
        d.name as fexpertName,
        case person_record.Fdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as finalResult,
        #person_expert.type,
        #g.label,
        #person_expert.items,
        #f.label,
        #person_expert.item_text
        #g.label,
        #person_expert.type,
        #f.value,
        #f.label


        #feedback.back_memo,
        person_record.fy_advice as advice
        #person_record.batch_status,
        #person_record.declare_status
        FROM
        person_record
        left join enterprise_workers on person_record.person_id=enterprise_workers.id
        left join sys_user a on enterprise_workers.pid=a.id
        left join sys_office on a.office_id=sys_office.id
        left join sys_user b on person_record.first_Zexpert_id =b.id
        left join sys_user c on person_record.second_Zexpert_id =c.id
        left join sys_user d on person_record.Fexpert_id=d.id
        left join person_expert on person_record.id=person_expert.record_id and person_expert.items!='1' and person_expert.examine_type='4' and person_expert.type not in('35','36','37','38','39','40')
        left join sys_examine on person_expert.examine_id=sys_examine.id
        left join sys_dict g on person_expert.type = g.value and g.type='expert_type'
        left join sys_dict f on concat('person_expert',person_expert.type)=f.type and person_expert.items=f.value
        left join feedback on feedback.person_record_id=person_record.id
        <where>
            <if test="officeId != null and officeId !=''">
                and sys_office.id = #{officeId}
            </if>
            <if test="batchNo != null and batchNo !=''">
                and batchno = #{batchNo}
            </if>
            <if test="finalResult != null and finalResult !=''">
                and Fdeclare_result = #{finalResult}
            </if>
            <if test="declareType != null and declareType !=''">
                and person_record.declare_type = #{declareType}
            </if>
            and person_record.del_flag='0'
            and person_record.batch_status in ('17','19')
        </where>
        group by
        enterprise_workers.sex,
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name`,
        enterprise_workers.register_certificate_num,
        person_record.declare_date,
        d.`name`,
        b.`name`,
        person_record.Zdeclare_result,
        person_record.Fdeclare_result,
        #feedback.back_memo,
        person_record.fy_advice
        order by
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name` asc

    </select>

    <!-- 查询某批次 注销登记 的人员信息 -->
    <select id="findReconsiderationStatisticsCancelInfo" resultType="ReportReconsiderationStatistics">
        select
        enterprise_workers.`name` as enterpriseName,
        case  enterprise_workers.sex  when '1' then '男' when '2' then '女' end as sex,
        enterprise_workers.register_certificate_num as registerCertificateNum,
        a.`name` as companyName,
        sys_office.`name` as areaName,
        case person_record.declare_type
        when '0' then '注销登记' when '1' then '初始登记' when '2' then '变更执业单位' when '3' then '变更专业' when '4' then '继续登记' end as declareType,
        enterprise_workers.register_main_specialty as registerMainSpecialty,
        enterprise_workers.register_auxiliary_specialty as registerAuxiliarySpecialty,
        person_record.declare_date as declareDate,
        b.`name` as finalZhuName,
        case person_record.Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as fzResult,
        d.name as fexpertName,
        case person_record.Fdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as finalResult,
        #person_expert.type,
        #g.label,
        #person_expert.items,
        #f.label,
        #person_expert.item_text
        #g.label,
        #person_expert.type,
        #f.value,
        #f.label
        GROUP_concat(concat(g.label,':',f.label,'-描述:',person_expert.item_text)  SEPARATOR '|') as finalOpinion,
        GROUP_concat(back_memo  SEPARATOR '|') as feedBack,
        #feedback.back_memo,
        person_record.fy_advice as advice
        #person_record.batch_status,
        #person_record.declare_status
        FROM
        person_record
        left join enterprise_workers on person_record.person_id=enterprise_workers.id
        left join sys_user a on enterprise_workers.pid=a.id
        left join sys_office on a.office_id=sys_office.id
        left join sys_user b on person_record.first_Zexpert_id =b.id
        left join sys_user c on person_record.second_Zexpert_id =c.id
        left join sys_user d on person_record.Fexpert_id=d.id
        left join person_expert on person_record.id=person_expert.record_id and person_expert.items!='1' and person_expert.examine_type='4' and person_expert.type not in('35','36','37','38','39','40')
        left join sys_examine on person_expert.examine_id=sys_examine.id
        left join sys_dict g on person_expert.type = g.value and g.type='expert_type'
        left join sys_dict f on concat('person_expert',person_expert.type)=f.type and person_expert.items=f.value
        left join feedback on feedback.person_record_id=person_record.id
        <where>
            <if test="officeId != null and officeId !=''">
                and sys_office.id = #{officeId}
            </if>
            <if test="batchNo != null and batchNo !=''">
                and batchno = #{batchNo}
            </if>
            <if test="finalResult != null and finalResult !=''">
                and Fdeclare_result = #{finalResult}
            </if>
            <if test="declareType != null and declareType !=''">
                and person_record.declare_type = #{declareType}
            </if>
            and person_record.del_flag='0'
            and person_record.batch_status in ('17','19')
        </where>
        group by
        enterprise_workers.sex,
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name`,
        enterprise_workers.register_certificate_num,
        person_record.declare_date,
        d.`name`,
        b.`name`,
        person_record.Zdeclare_result,
        person_record.Fdeclare_result,
        enterprise_workers.register_main_specialty,
        enterprise_workers.register_auxiliary_specialty,
        #feedback.back_memo,
        person_record.fy_advice
        order by
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name` asc

    </select>


    <!-- 查询某批次 变更执业单位 的人员信息 -->
    <select id="findReconsiderationStatisticsApplyWorkInfo" resultType="ReportReconsiderationStatistics">



    </select>

    <!-- 查询某批次 变更专业 的人员信息 -->
    <select id="findReconsiderationStatisticsSpecialtyInfo" resultType="ReportReconsiderationStatistics">
        select
        enterprise_workers.`name` as enterpriseName,
        case  enterprise_workers.sex  when '1' then '男' when '2' then '女' end as sex,
        enterprise_workers.register_certificate_num as registerCertificateNum,
        a.`name` as companyName,
        sys_office.`name` as areaName,
        case person_record.declare_type
        when '0' then '注销登记' when '1' then '初始登记' when '2' then '变更执业单位' when '3' then '变更专业' when '4' then '继续登记' end as declareType,
        Getzhuanye(h.oldvalue) as originalMajor,
        Getzhuanye(h.newvalue) as newMainProfessional,
        Getzhuanye(i.oldvalue) as originalAuxiliaryProfession,
        Getzhuanye(i.newvalue) as newAuxiliaryProfession,
        person_record.declare_date as declareDate,
        b.`name` as finalZhuName,
        case person_record.first_Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as fzResult,
        c.name as finalFuName,
        case person_record.second_Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as szResult,
        case person_record.Zdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as zResult,
        d.name as fexpertName,
        case person_record.Fdeclare_result when '1' then '通过' when '3' then '未通过'  when '2' then '部分通过' end as finalResult,
        #person_expert.type,
        #g.label,
        #person_expert.items,
        #f.label,
        #person_expert.item_text
        #g.label,
        #person_expert.type,
        #f.value,
        #f.label
        GROUP_concat(concat(g.label,':',f.label,'-描述:',person_expert.item_text)  SEPARATOR '|') as finalOpinion,
        GROUP_concat(back_memo  SEPARATOR '|') as feedBack,
        #feedback.back_memo,
        person_record.fy_advice as advice
        #person_record.batch_status,
        #person_record.declare_status
        FROM
        person_record
        left join enterprise_workers on person_record.person_id=enterprise_workers.id
        left join sys_user a on enterprise_workers.pid=a.id
        left join sys_office on a.office_id=sys_office.id
        left join sys_user b on person_record.first_Zexpert_id =b.id
        left join sys_user c on person_record.second_Zexpert_id =c.id
        left join sys_user d on person_record.Fexpert_id=d.id
        left join change_item h on person_record.id=h.person_record_id and h.changetype='2'
        left join change_item i on person_record.id=i.person_record_id and i.changetype='3'
        left join person_expert on person_record.id=person_expert.record_id and person_expert.items!='1' and person_expert.examine_type='4' and person_expert.type not in('35','36','37','38','39','40')
        left join sys_examine on person_expert.examine_id=sys_examine.id
        left join sys_dict g on person_expert.type = g.value and g.type='expert_type'
        left join sys_dict f on concat('person_expert',person_expert.type)=f.type and person_expert.items=f.value
        left join feedback on feedback.person_record_id=person_record.id
        <where>
            <if test="officeId != null and officeId !=''">
                and sys_office.id = #{officeId}
            </if>
            <if test="batchNo != null and batchNo !=''">
                and batchno = #{batchNo}
            </if>
            <if test="finalResult != null and finalResult !=''">
                and Fdeclare_result = #{finalResult}
            </if>
            <if test="declareType != null and declareType !=''">
                and person_record.declare_type = #{declareType}
            </if>
            and person_record.del_flag='0'
            and person_record.batch_status>11
            and person_record.batch_status!='21'
        </where>
        group by
        enterprise_workers.sex,
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name`,
        enterprise_workers.register_certificate_num,
        person_record.declare_date,
        h.oldvalue,
        h.newvalue,
        i.oldvalue,
        i.newvalue,
        d.`name`,
        person_record.first_Zdeclare_result,
        b.`name`,
        person_record.second_Zdeclare_result,
        person_record.Zdeclare_result,
        c.name,
        person_record.Fdeclare_result,
        #feedback.back_memo,
        person_record.fy_advice
        order by
        person_record.declare_type,
        sys_office.`name`,
        a.`name`,
        enterprise_workers.`name` asc


    </select>


</mapper>